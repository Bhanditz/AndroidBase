apply plugin: 'com.android.library'
apply plugin: 'android-apt'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


group = rootProject.ext.packageName
version = rootProject.ext.libraryVersionName

// Local aar info
install {
    repositories.mavenInstaller {
        pom.project {
            name project.name
            description rootProject.ext.description
            url rootProject.ext.websiteUrl
            inceptionYear '2016' // release date

            // gradle dependency
            packaging 'aar'
            groupId rootProject.ext.packageName
            artifactId project.name
            version rootProject.ext.libraryVersionName

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            scm { // Optional setting
                connection rootProject.ext.gitHubRepoUrl
                developerConnection rootProject.ext.gitHubRepoUrl
                url rootProject.ext.websiteUrl
            }

            developers { // Optional setting
                developer {
                    id 'taehwandev'
                    name 'taehwan'
                    email 'taehwan@thdev.tech'
                }
            }
        }
    }
}

// Bintray setting
bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives'] // When uploading configuration files

    publish = true // [Default: false] Whether version should be auto published after an upload

    pkg {
        repo = rootProject.ext.repositoryName
        name = project.name
        userOrg = user // An optional organization name when the repo belongs to one of the user's orgs
        desc = rootProject.ext.description
        licenses = ['Apache-2.0']

        vcsUrl = rootProject.ext.gitHubRepoUrl
        websiteUrl = rootProject.ext.websiteUrl

        labels = ['aar', 'android', 'android base'] // Optional
        publicDownloadNumbers = true

        githubRepo = rootProject.ext.githubRepo
        githubReleaseNotesFile = rootProject.ext.githubReleaseNotesFile

        version {
            name = rootProject.ext.libraryVersionName
            desc = rootProject.ext.description
            vcsTag = rootProject.ext.libraryVersionName
        }
    }
}
// Bintray setting end

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.libraryVersionName

        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile(rootProject.ext.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.appCompat
    compile rootProject.ext.recyclerView
    testCompile rootProject.ext.junit

    // ButterKnife
    compile rootProject.ext.butterKnife
    apt rootProject.ext.butterKnifeCompiler

    // Kotlin
    provided rootProject.ext.kotlinStdlib
}

// JCenter publish
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}