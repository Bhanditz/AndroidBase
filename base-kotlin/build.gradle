apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'

group = GROUP
version = rootProject.ext.kotlinLibraryVersionName

publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId GROUP
            artifactId project.getName()
            version rootProject.ext.kotlinLibraryVersionName
        }
    }
}

// Local aar info
install {
    repositories.mavenInstaller {
        pom.project {
            name project.name
            description rootProject.ext.kotlinDescription
            url rootProject.ext.websiteUrl
            inceptionYear '2017' // release date

            // gradle dependency
            packaging 'aar'
            groupId GROUP
            artifactId project.name
            version rootProject.ext.kotlinLibraryVersionName

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            scm { // Optional setting
                connection rootProject.ext.gitHubRepoUrl
                developerConnection rootProject.ext.gitHubRepoUrl
                url rootProject.ext.websiteUrl
            }

            developers { // Optional setting
                developer {
                    id 'taehwandev'
                    name 'taehwan'
                    email 'taehwan@thdev.tech'
                }
            }
        }
    }
}

// Bintray setting
bintray {
    println "kotlin user " + rootProject.ext.BINTRARY_USER
    user = rootProject.ext.BINTRARY_USER
    key = rootProject.ext.BINTRARY_KEY

    configurations = ['deployables'] // When uploading configuration files
    publications = ['MyPublication'] // When uploading Maven-based publication files

    publish = true //[Default: false] Whether version should be auto published after an upload

    pkg {
        repo = rootProject.ext.repositoryName
        name = project.name
        userOrg = user // An optional organization name when the repo belongs to one of the user's orgs
        desc = description
        licenses = ['Apache-2.0']

        vcsUrl = rootProject.ext.gitHubRepoUrl
        websiteUrl = rootProject.ext.websiteUrl

        labels = ['aar', 'android', 'android base'] // Optional
        publicDownloadNumbers = true

        githubRepo = rootProject.ext.githubRepo
        githubReleaseNotesFile = 'CHANGELOG-KOTLIN.md'
    }
}
// Bintray setting end

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.kotlinLibraryVersionCode
        versionName rootProject.ext.kotlinLibraryVersionName

        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoLibVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$rootProject.ext.junitLibVersion"

    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"

    // ButterKnife
    compile "com.jakewharton:butterknife:$rootProject.ext.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterKnifeVersion"

    // Kotlin
    provided "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.ext.kotlinVersion"
}

// JCenter publish
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}
